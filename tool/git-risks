#!/bin/bash
# Estimate the risk of changes to the MPS.
#
# [Insert why this was developed, ref to issue, etc.  RB 2023-02-24]
#
# Takes arguments to ``git log``.  For example, to assess changes on
# master::
#
#   tool/git-risks --first-parent -n 10 master
#
# The estimate of the risks of changing files is stored in
# tool/git-riskiness
#
# TODO: Take option to select risk column argument to sort.
#
# Developed from <https://info.ravenbrook.com/mail/2023/02/21/17-08-50/0/>.

git log --format="%H %h %s" "$@" |
while read -r hash commit subject; do
    risks=$(
	# Strip comments and blank lines from git-riskiness.
	sed --regexp-extended \
	    --expression='s/[[:space:]]*#.*$//; /^[[:space:]]*$/ d' < tool/git-riskiness |
	    # Filter for lines that mention files changed in the commit.
	    # Ignores lines that look like comments.
	    (
		grep --fixed-strings \
		     --file=<(git show --pretty="format:" \
				  --patch \
				  --diff-merges=first-parent \
				  --ignore-matching-lines='^[[:space:]]+\*[[:space:]]' \
				  --ignore-matching-lines='^[[:space:]]*/\*[[:space:]]' \
				  --ignore-space-change \
				  "$hash" |
				  sed --quiet --expression='s!--- a/!!p') ||
		    echo "0 0 no-match"
	    ) |
	    # Pick the riskiest.
	    # NOTE: --key is 1-based.
	    sort --numeric --reverse --key=2 |
	    head --lines=1
	 )
    echo "$commit $loc $risks $subject"
done
