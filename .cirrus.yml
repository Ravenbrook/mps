# .cirrus.yml -- Cirrus CI configuration for the MPS

# FIXME: Copyright, licence, etc.

# FIXME: Specify versions of OS and toolchains.  Source?

# Templates for inclusion in tasks.
# See <https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks>.

init_script_template: &INIT_SCRIPT_TEMPLATE
  init_script:
    - uname -a

build_script_template: &BUILD_SCRIPT_TEMPLATE
  build_script:
    - $CC --version
    - $CC -dumpmachine
    - CC=$CC ./configure --prefix=$PWD/prefix && make install && make test

XCA6LL_task:
  macos_instance:
    # What does this syntax mean?  See <https://github.com/cirruslabs/cirrus-ci-docs/discussions/1147#discussioncomment-4902556>.
    image: ghcr.io/cirruslabs/macos-ventura-xcode
  env:
    CC: cc
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

# https://cirrus-ci.org/guide/writing-tasks/ doesn't seem to allow for FreeBSD on arm64

FRI6LL_task:
  freebsd_instance:
    # Why is this a "family"?  See <https://github.com/cirruslabs/cirrus-ci-docs/discussions/1147#discussioncomment-4902556>.
    image_family: freebsd-13-1
  env:
    CC: clang
  << : *INIT_SCRIPT_TEMPLATE
  install_script: pkg install -y gmake
  << : *BUILD_SCRIPT_TEMPLATE

# FRA6LL doesn't seem to work.  Cirrus CI gets an "Agent is not
# responding!" error on its status page.
#
# There's no output from::
#
#   gcloud compute images list --project freebsd-org-cloud-dev --no-standard-images | grep -v amd64
#
# Fortunately, we can do this using Travis CI.  See .travis.yml.

FRI6GC_task:
  freebsd_instance:
    image_family: freebsd-13-1
  env:
    CC: gcc
  << : *INIT_SCRIPT_TEMPLATE
  install_script:
    - pkg install -y gmake gcc
  << : *BUILD_SCRIPT_TEMPLATE

# Is this really "LI" if it's a docker container?  Does it matter?
# Is gcc:latest what we want to test against?
# Perhaps we should start with an ubuntu image.
LIA6GC_task:
  arm_container:
    image: gcc # https://hub.docker.com/_/gcc
  env:
    CC: gcc
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

LIA6LL_task:
  arm_container:
    image: ubuntu # https://hub.docker.com/_/ubuntu
  env:
    CC: clang
  << : *INIT_SCRIPT_TEMPLATE
  install_script:
    - apt-get update
    - apt-get install -y make clang
  << : *BUILD_SCRIPT_TEMPLATE
