# .cirrus.yml -- Cirrus CI configuration for the MPS
#
# Copyright (c) 2023 Ravenbrook Limited. See end of file for license.
#
# See design.ci.cirrus.config.

# FIXME: Specify versions of OS and toolchains.  Source?

# Templates for inclusion in tasks.
#
# See <https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks>.

init_script_template: &INIT_SCRIPT_TEMPLATE
  init_script:
    # Cirrus CI doesn't include machine configuration in its output,
    # so gather it here.
    - uname -a

build_script_template: &BUILD_SCRIPT_TEMPLATE
  build_script:
    # Cirrus CI doesn't include toolchain configuration in its output,
    # so gather it here.
    - $CC --version
    - $CC -dumpmachine
    # see design.ci.run.posix
    - CC=$CC ./configure --prefix=$PWD/prefix && make install && make test

# Override clone script to get the *trial merge* of a pull request
# with its base (usually master) rather than the branch.  See
# <https://cirrus-ci.org/guide/tips-and-tricks/#custom-clone-command>.
# See also
# <https://github.com/cirruslabs/cirrus-ci-docs/discussions/1110#discussion-4613478>.

clone_script_template: &CLONE_SCRIPT_TEMPLATE
  clone_script: |
    set -x
    git clone --depth=1 --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    if test -n "$CIRRUS_PR"; then
      cd $CIRRUS_WORKING_DIR &&
      git fetch --depth=1 origin pull/$CIRRUS_PR/merge &&
      git checkout FETCH_HEAD
    fi


# The builds for Cirrus CI
#
# See design.ci.platforms.

XCA6LL_task:
  macos_instance:
    # What does this syntax mean?
    # See <https://github.com/cirruslabs/cirrus-ci-docs/discussions/1147#discussioncomment-4902556>.
    image: ghcr.io/cirruslabs/macos-ventura-xcode
  env:
    CC: cc
  << : *CLONE_SCRIPT_TEMPLATE
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

FRI6LL_task:
  freebsd_instance:
    # Why is this a "family"?
    # See <https://github.com/cirruslabs/cirrus-ci-docs/discussions/1147#discussioncomment-4902556>.
    image_family: freebsd-13-1
  env:
    CC: clang
  install_script: pkg install -y git gmake
  << : *CLONE_SCRIPT_TEMPLATE
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

FRI6GC_task:
  freebsd_instance:
    image_family: freebsd-13-1
  env:
    CC: gcc
  install_script: pkg install -y git gmake gcc
  << : *CLONE_SCRIPT_TEMPLATE
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

# Is this really "LI" if it's a docker container?  Does it matter?
# Is gcc:latest what we want to test against?
# Perhaps we should start with an ubuntu image.
LIA6GC_task:
  arm_container:
    image: gcc # https://hub.docker.com/_/gcc
  env:
    CC: gcc
  << : *CLONE_SCRIPT_TEMPLATE
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE

LIA6LL_task:
  arm_container:
    image: ubuntu # https://hub.docker.com/_/ubuntu
  env:
    CC: clang
  install_script:
    - apt-get update
    - apt-get install -y git make clang
  << : *CLONE_SCRIPT_TEMPLATE
  << : *INIT_SCRIPT_TEMPLATE
  << : *BUILD_SCRIPT_TEMPLATE


# A. REFERENCES
#
#
# B. DOCUMENT HISTORY
#
# 2013-02-08 RB Created.
#
#
# C. COPYRIGHT AND LICENSE
#
# Copyright (C) 2023 Ravenbrook Limited <https://www.ravenbrook.com/>.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# $Id$
  
